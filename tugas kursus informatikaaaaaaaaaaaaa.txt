<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List with Local Storage</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            max-width: 400px;
            margin: auto;
        }
        ul {
            list-style: none;
            padding: 0;
        }
        li {
            margin: 10px 0;
            padding: 10px;
            background: #fac8f7;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        button {
            background: red;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>To-Do List</h1>
    <input type="text" id="taskInput" placeholder="Add a new task" />
    <input type="time" id="timeInput"/>
    <button id="addTask">Add Task</button>
    <button id="addJamBtn">Add Jam</button>
    <ul id="taskList"></ul>

    <script>
        const taskInput = document.getElementById('taskInput');
        const timeInput = document.getElementById('timeInput');
        const addTaskButton = document.getElementById('addTask');
        const addJamButton = document.getElementById('addJamBtn');
        const taskList = document.getElementById('taskList');

        // Load tasks from local storage
        function loadTasks() {
            const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
            tasks.forEach(task => addTaskToDOM(task.item, task.time));
        }

        // Save tasks to local storage
        function saveTasks() {
            const tasks = Array.from(taskList.children).map(item => ({
                item: item.querySelector('.task-info').textContent,
                time: item.querySelector('.time-info') ? item.querySelector('.time-info').textContent : ''
            }));
            localStorage.setItem('tasks', JSON.stringify(tasks));
        }

        // Add task to DOM
        function addTaskToDOM(taskText, taskTime) {
            const li = document.createElement('li');
           
            const taskInfo = document.createElement('span');
            taskInfo.classList.add('task-info');
            taskInfo.textContent = taskText;

            const timeInfo = document.createElement('span');
            timeInfo.classList.add('time-info');
            if (taskTime) timeInfo.textContent = ` - ${taskTime}`;

            const removeButton = document.createElement('button');
            removeButton.textContent = 'Remove';
            removeButton.onclick = () => {
                li.remove();
                saveTasks();
            };

            li.appendChild(taskInfo);
            li.appendChild(timeInfo);
            li.appendChild(removeButton);
            taskList.appendChild(li);
        }

        // Add task event
        addTaskButton.onclick = () => {
            const task = taskInput.value.trim();
            const time = timeInput.value.trim(); // Get time from the time input field
            if (task && time) {
                addTaskToDOM(task, time);
                saveTasks();
                taskInput.value = ''; // Clear task input
                timeInput.value = ''; // Clear time input
            }
        };

        // Add Jam (Time) event
        addJamButton.onclick = () => {
            const task = taskInput.value.trim();
            const time = timeInput.value.trim();
            if (task && time) {
                addTaskToDOM(task, time);
                saveTasks(); // Corrected from saveTask() to saveTasks()
                taskInput.value = ''; // Clear input
                timeInput.value = ''; // Clear time input
            }
        };

        // Initialize
        loadTasks();
    </script>
</body>
</html>
